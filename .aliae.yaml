alias:
  - name: vi
    value: nvim
  - name: vim
    value: nvim
  - name: cat
    value: bat
  - name: ls
    value: 'eza -a --icons --group-directories-first --git'
  - name: ll
    value: 'eza -la --icons --group-directories-first --git'
  - name: tree
    value: 'eza -T --icons'

  - name: sudo
    if: eq .OS "linux"
    value: 'sudo '
  - name: apt
    if: eq .OS "linux"
    value: nala
  - name: grep
    if: eq .OS "linux"
    value: rg

  - name: zip
    if: eq .OS "windows"
    value: nanazipc

  # commands
  - name: reload
    if: eq .Shell "pwsh"
    value: |
      . $profile

  - name: reload
    if: eq .OS "linux"
    value: source ~/.bashrc

  - name: update
    if: eq .Shell "pwsh"
    value: . "{{ env "USERPROFILE" }}/scripts/update.ps1"

  - name: update
    if: eq .OS "linux"
    value: |
      sudo nala update && \
      sudo nala upgrade -y && \
      curl -fsSL https://ohmyposh.dev/install.sh | bash -s -- -d {{ .Home }}/.local/bin && \
      curl -fsSL https://aliae.dev/install.sh | bash -s -- -d {{ .Home }}/.local/bin

  - name: update-spotify
    if: eq .OS "windows"
    value: |
      spicetify update
      spicetify restore backup apply -q

  - name: update-dotnet
    if: eq .OS "linux"
    value: |
      curl -fsSL https://dot.net/v1/dotnet-install.sh | bash -s -- --version latest

  - name: update-go
    if: eq .OS "linux"
    value: |
      (cd {{ .Home }} && \
      curl -fsSL https://s.id/golang-linux | bash -s && \
      rm -rf go*.tar.gz)

  - name: backup-folders
    if: eq .Shell "pwsh"
    value: . "{{ env "USERPROFILE" }}/scripts/backup-folders.ps1" -Folders

  # git
  - name: ignore
    type: git
    value: '!gi() { curl -fsSL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi'

  - name: gh-new
    if: eq .OS "linux"
    value: gh repo create $1 --private --source . --push

  # projects init
  - name: init-goweb
    type: function
    if: eq .Shell "bash"
    value: |
      . {{ .Home }}/scripts/init/goweb/init.sh

env:
  - name: POSH_THEME
    value: '{{ env "POSH_THEMES_PATH" }}/custom/negligible.omp.json'

script:
  - value: |
      load(io.popen('oh-my-posh init {{ .Shell }} --config %POSH_THEME%'):read("*a"))()
    if: match .Shell "cmd"
  - value: |
      oh-my-posh init {{ .Shell }} --config $env:POSH_THEME | Invoke-Expression
    if: match .Shell "pwsh"
  - value: |
      eval "$(oh-my-posh init {{ .Shell }} --config $POSH_THEME)"
    if: match .Shell "bash" "zsh"
